static boolean cycleDetect(Node head) {
    if(head == null) return false;
    Node fast = head;
    Node slow = head;
        
    while(fast.next != null && fast.next.next != null) {
        fast = fast.next.next;
        slow = slow.next;
        if(fast == slow) return true;
    }
    return false;
}



################# Hashset #####################

static boolean cycleDetect(Node head) {
    HashSet <Node> hashTable=new HashSet<>();
    while(head != null) {
        if(hashTable.contains(head)) return true;
        hashTable.add(head);
        head = head.next;
    }
    return false;
}
